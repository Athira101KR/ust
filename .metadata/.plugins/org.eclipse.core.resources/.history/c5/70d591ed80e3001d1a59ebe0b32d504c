//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

public class reverse {
    public static void main (String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
        
        //while testcases exist
        while(t-->0){
            
            String inputLine1[] = br.readLine().trim().split(" ");
            int n = Integer.parseInt(inputLine1[0]);
            int k = Integer.parseInt(inputLine1[1]);
            
            ArrayList<Integer> arr = new ArrayList<>();            
            String inputLine2[] = br.readLine().trim().split(" ");
            for(int i=0; i<n; i++){
                arr.add(Integer.parseInt(inputLine2[i]));
            }
            
            Solution obj = new Solution();
            obj.reverseInGroups(arr, n, k);
            
            StringBuffer str = new StringBuffer();
            for(int i=0; i<n; i++){
                str.append(arr.get(i) + " ");
            }
            System.out.println(str);
        }
    }
}


// } Driver Code Ends


//User function Template for Java

class Solution {
    //Function to reverse every sub-array group of size k.
    void reverseInGroups(ArrayList<Integer> arr, int n, int k) {
        // code here
          Integer[] numArray = new Integer[arr.size()];
        numArray = arr.toArray(numArray);
       ArrayList<Integer> arr1=new ArrayList<>();
       ArrayList<Integer> arr2=new ArrayList<>();
       for(int i=0;i<n;i++)
       {
           if(i<k)
           {
               arr1.add(numArray[i]);
           }
           else
           {
               arr2.add(numArray[i]);
           }
       }

    Integer[] numArray1=new Integer[arr1.size()];
    numArray1=arr1.toArray(numArray1);
    Integer[] numArray2=new Integer[arr2.size()];
    numArray2=arr2.toArray(numArray2);
    
    arr.clear();
    for(int i=arr1.size()-1;i>=0;i--)
    {
        arr.add(numArray1[i]);
    }
    for(int i=arr2.size()-1;i>=0;i--)
    {
        arr.add(numArray2[i]);
    }
   // System.out.println(arr3);
    }
}
